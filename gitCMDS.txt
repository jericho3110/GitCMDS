git init = initializes git in the Directory
rm -rf .git = uninitializes the Directory if it has git
git status = checks the status of git hence the name

git add NAME_OF_FILE = stages the file specified
git add . = stages all the files
git commit -m "MESSAGE" = commits the staged files

git branch = checks all available branches
git branch -M main = It forces the rename: The "-M" option forces Git to rename the branch even if there are naming conflicts with other existing branches. This can be useful if you want to ensure that your main branch is always called "main", regardless of any conflicts with other branch names.
git branch NAME_OF_BRANCH = creates a git branch
git checkout NAME_OF_BRANCH = moves to that specified branch / checks if you're at that specified branch

git remote -v = shows connected remote repository
git remote add NAME URL = sets a remote url to be accesed
git remote rm NAME = deletes the NAME
git remote set-url NAME NEW_URL = changes the url

git config --global user.name "NAME HERE" = sets username of your git
git config --global user.email EMAIL = sets email of your git

git push NAME BRANCH = pushes the commited projects to the specified branch of the repository using the remote url

git pull NAME BRANCH = pulls the files of the specified branch of the repository
git pull NAME BRANCH --allow-unrelated-histories = pulls the files of the specified branch of the repository while preventing fatal: refusing to merge unrelated histories
